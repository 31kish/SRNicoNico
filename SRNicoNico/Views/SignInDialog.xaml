<metro:MetroWindow x:Class="SRNicoNico.Views.SignInDialog"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                   xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                   xmlns:v="clr-namespace:SRNicoNico.Views"
                   xmlns:vm="clr-namespace:SRNicoNico.ViewModels"
		           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                   Title="ログイン"
                   FontFamily="Meiryo"
                   FontStyle="Normal"
                   FontWeight="Normal" 
                   ResizeMode="NoResize"
                   Background="{DynamicResource ThemeBrushKey}"
                   Foreground="{DynamicResource ForegroundBrushKey}"
                   Topmost="True"
                   WindowStartupLocation="CenterOwner"
                   Width="431" 
                   Height="200"
                   >

    <i:Interaction.Triggers>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />

        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <l:LivetCallMethodAction MethodName="Close" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <l:InteractionMessageTrigger MessageKey="WindowAction" 
			Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>


    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" metro:MetroWindow.IsCaptionBar="True">
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="ログイン" TextTrimming="CharacterEllipsis" FontSize="18" Margin="10,0,0,0" VerticalAlignment="Center" />
                <metro:SystemButtons Grid.Column="2" VerticalAlignment="Top" />
            </Grid>
        </Border>

        <TextBlock Grid.Row="1" Margin="32,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="メールアドレス" TextWrapping="Wrap" />
        <TextBox Grid.Row="1" Width="242"  Margin="133,11,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding MailAddress}" TextWrapping="Wrap" IsEnabled="{Binding Enabled}" />
        <TextBlock Grid.Row="1" Width="96" Margin="32,56,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="パスワード" TextWrapping="Wrap" />
        <PasswordBox Grid.Row="1" Width="242" Margin="133,56,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="{Binding Enabled}">
            <i:Interaction.Behaviors>
                <l:PasswordBoxBindingSupportBehavior Password="{Binding Password}" />
            </i:Interaction.Behaviors>
        </PasswordBox>
        <Button Grid.Row="1" Width="103" Margin="272,129,0,0"  HorizontalAlignment="Left"  VerticalAlignment="Top" Content="ログイン" IsEnabled="{Binding Enabled}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:LivetCallMethodAction MethodName="SignIn" MethodTarget="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </Button>
        <TextBlock Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding StateText}" VerticalAlignment="Top" Margin="32,129,0,0" Height="43" Width="206" Foreground="#FFAAAAAA"/>
        <CheckBox Grid.Row="1" Content="次回以降自動的にログインする" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="133,94,0,0" Foreground="#FFAAAAAA" IsChecked="{Binding AutoLogin}" IsEnabled="{Binding Enabled}" />



    </Grid>
</metro:MetroWindow>
