<metro:MetroWindow x:Class="SRNicoNico.Views.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:contents="clr-namespace:SRNicoNico.Views.Contents"
                   xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 	   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                   xmlns:mui="http://firstfloorsoftware.com/ModernUI"
				   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                   xmlns:search="clr-namespace:SRNicoNico.Views.Contents.Search"
                   xmlns:nicorepo="clr-namespace:SRNicoNico.Views.Contents.NicoRepo"
                   xmlns:v="clr-namespace:SRNicoNico.Views"
                   xmlns:vm="clr-namespace:SRNicoNico.ViewModels"
	 		       xmlns:local="clr-namespace:SRNicoNico.Views.Controls"
                   xmlns:root="clr-namespace:SRNicoNico.Views"
                   xmlns:misc="clr-namespace:SRNicoNico.Views.Contents.Misc"
                   xmlns:video="clr-namespace:SRNicoNico.Views.Contents.Video"
                   Width="870"
                   Height="723"
                   MinWidth="600"
                   MinHeight="500"
		           Background="{DynamicResource ThemeBrushKey}"
		  	       Foreground="{DynamicResource ActiveForegroundBrushKey}"
				   FontFamily="Yu Gothic UI"
	               IsRestoringWindowPlacement="True"
		           UseLayoutRounding="True"
			       TextOptions.TextFormattingMode="Display"
	       	       WindowState="{Binding WindowState}"
		           SnapsToDevicePixels="True"
                   x:Name="Root"
				  >

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction/>
        </l:InteractionMessageTrigger>


        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>
	
	

    <ContentControl Content="{Binding RootContent}">

        <ContentControl.Resources>
            <DataTemplate DataType="{x:Type vm:MainWindowViewModel}">
                <root:RootContent HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </DataTemplate>
        </ContentControl.Resources>
		
	
	</ContentControl>


</metro:MetroWindow>
