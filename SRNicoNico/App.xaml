<Application x:Class="SRNicoNico.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             >
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />
				<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.Dark.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Themes/Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Themes/Accents/Blue.xaml" />

            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="DefaultItemContainerStyle" TargetType="ListBoxItem">
					<Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
					<Setter Property="Height" Value="38" />
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWay}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border Background="{TemplateBinding Background}">
									<ContentPresenter />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource AccentHighlightBrushKey}" />
							<Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
						</Trigger>
           
                        <Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
						</Trigger>
					</Style.Triggers>
            </Style>

            <Style x:Key="HorizontalViewStyle" TargetType="{x:Type metro:TabView}">
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type metro:TabView}">
                            <StackPanel Background="{TemplateBinding Background}">
                                <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}"/>
                            <Setter Property="Height" Value="38"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWay}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentHighlightBrushKey}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentBrushKey}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type metro:ITabItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="1" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}}}" FontSize="14" Text="{Binding Name}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
                                <metro:Badge Grid.ColumnSpan="2" Count="{Binding Badge}" Grid.Column="1" HorizontalAlignment="Right" Margin="0,4,4,0" Visibility="Hidden" VerticalAlignment="Top"/>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
	</Application.Resources>
</Application>
